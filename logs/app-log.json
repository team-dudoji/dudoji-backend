{"@timestamp":"2025-08-13T16:00:13.909134+09:00","level":"INFO","logger":"com.dudoji.spring.DudojiApplication","thread":"restartedMain","message":"Starting DudojiApplication using Java 21.0.5 with PID 61965 (/Users/jeong-yunseong/Documents/GitHub/dudoji/dudoji-backend/build/classes/java/main started by jeong-yunseong in /Users/jeong-yunseong/Documents/GitHub/dudoji/dudoji-backend)","exception":""}
{"@timestamp":"2025-08-13T16:00:13.914153+09:00","level":"INFO","logger":"com.dudoji.spring.DudojiApplication","thread":"restartedMain","message":"The following 1 profile is active: \"local\"","exception":""}
{"@timestamp":"2025-08-13T16:00:14.011455+09:00","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"@timestamp":"2025-08-13T16:00:14.011595+09:00","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"@timestamp":"2025-08-13T16:00:14.463564+09:00","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","exception":""}
{"@timestamp":"2025-08-13T16:00:14.532638+09:00","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 66 ms. Found 1 MongoDB repository interface.","exception":""}
{"@timestamp":"2025-08-13T16:00:14.791087+09:00","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 36073 (http)","exception":""}
{"@timestamp":"2025-08-13T16:00:14.796458+09:00","level":"INFO","logger":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","message":"Initializing ProtocolHandler [\"http-nio-36073\"]","exception":""}
{"@timestamp":"2025-08-13T16:00:14.797054+09:00","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"@timestamp":"2025-08-13T16:00:14.797145+09:00","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","exception":""}
{"@timestamp":"2025-08-13T16:00:14.812645+09:00","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"@timestamp":"2025-08-13T16:00:14.812752+09:00","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 801 ms","exception":""}
{"@timestamp":"2025-08-13T16:00:15.206845+09:00","level":"INFO","logger":"org.mongodb.driver.client","thread":"restartedMain","message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"5.2.1\"}, \"os\": {\"type\": \"Darwin\", \"name\": \"Mac OS X\", \"architecture\": \"aarch64\", \"version\": \"15.6\"}, \"platform\": \"Java/Amazon.com Inc./21.0.5+11-LTS\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='dudoji', source='dudoji_log', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@5e9d76ca], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7108354, com.mongodb.Jep395RecordCodecProvider@6af5e844, com.mongodb.KotlinCodecProvider@308b246]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[192.168.35.100:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@3696afcb], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}","exception":""}
{"@timestamp":"2025-08-13T16:00:15.273692+09:00","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"@timestamp":"2025-08-13T16:00:15.373899+09:00","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"@timestamp":"2025-08-13T16:00:15.45489+09:00","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name principalDetailService","exception":""}
{"@timestamp":"2025-08-13T16:00:15.768822+09:00","level":"INFO","logger":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","message":"Starting ProtocolHandler [\"http-nio-36073\"]","exception":""}
{"@timestamp":"2025-08-13T16:00:15.774653+09:00","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 36073 (http) with context path '/'","exception":""}
{"@timestamp":"2025-08-13T16:00:15.78272+09:00","level":"INFO","logger":"com.dudoji.spring.DudojiApplication","thread":"restartedMain","message":"Started DudojiApplication in 2.015 seconds (process running for 2.443)","exception":""}
{"@timestamp":"2025-08-13T16:00:16.271086+09:00","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"RMI TCP Connection(3)-127.0.0.1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"@timestamp":"2025-08-13T16:00:16.271256+09:00","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"RMI TCP Connection(3)-127.0.0.1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"@timestamp":"2025-08-13T16:00:16.272182+09:00","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"RMI TCP Connection(3)-127.0.0.1","message":"Completed initialization in 1 ms","exception":""}
{"@timestamp":"2025-08-13T16:00:16.280649+09:00","level":"INFO","logger":"org.mongodb.driver.cluster","thread":"RMI TCP Connection(2)-127.0.0.1","message":"Waiting for server to become available for operation with ID 3. Remaining time: 29997 ms. Selector: ReadPreferenceServerSelector{readPreference=primary}, topology description: {type=UNKNOWN, servers=[{address=192.168.35.100:27017, type=UNKNOWN, state=CONNECTING}].","exception":""}
{"@timestamp":"2025-08-13T16:00:25.206841+09:00","level":"INFO","logger":"org.mongodb.driver.cluster","thread":"cluster-ClusterId{value='689c37ff6b32e854e4366a85', description='null'}-192.168.35.100:27017","message":"Exception in monitor thread while connecting to server 192.168.35.100:27017","exception":"com.mongodb.MongoSocketOpenException: Exception opening socket\n\tat com.mongodb.internal.connection.SocketStream.lambda$open$0(SocketStream.java:85)\n\tat java.base/java.util.Optional.orElseThrow(Optional.java:403)\n\tat com.mongodb.internal.connection.SocketStream.open(SocketStream.java:85)\n\tat com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:233)\n\tat com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitor.lookupServerDescription(DefaultServerMonitor.java:219)\n\tat com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitor.run(DefaultServerMonitor.java:176)\nCaused by: java.net.SocketTimeoutException: Connect timed out\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:546)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:751)\n\tat com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:76)\n\tat com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:104)\n\tat com.mongodb.internal.connection.SocketStream.open(SocketStream.java:79)\n\t... 3 common frames omitted\n"}
{"@timestamp":"2025-08-13T16:00:46.281719+09:00","level":"WARN","logger":"org.springframework.boot.actuate.data.mongo.MongoHealthIndicator","thread":"RMI TCP Connection(2)-127.0.0.1","message":"MongoDB health check failed","exception":"org.springframework.dao.DataAccessResourceFailureException: Timed out while waiting for a server that matches ReadPreferenceServerSelector{readPreference=primary}. Client view of cluster state is {type=UNKNOWN, servers=[{address=192.168.35.100:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.SocketTimeoutException: Connect timed out}}]\n\tat org.springframework.data.mongodb.core.MongoExceptionTranslator.doTranslateException(MongoExceptionTranslator.java:97)\n\tat org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:74)\n\tat org.springframework.data.mongodb.core.MongoTemplate.potentiallyConvertRuntimeException(MongoTemplate.java:3009)\n\tat org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:584)\n\tat org.springframework.data.mongodb.core.MongoTemplate.executeCommand(MongoTemplate.java:516)\n\tat org.springframework.boot.actuate.data.mongo.MongoHealthIndicator.doHealthCheck(MongoHealthIndicator.java:46)\n\tat org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)\n\tat org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)\n\tat org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:82)\n\tat org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:41)\n\tat org.springframework.boot.actuate.health.HealthEndpointSupport.getLoggedHealth(HealthEndpointSupport.java:172)\n\tat org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:145)\n\tat org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateContribution(HealthEndpointSupport.java:156)\n\tat org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:141)\n\tat org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:110)\n\tat org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:81)\n\tat org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:76)\n\tat org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:66)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)\n\tat org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:74)\n\tat org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)\n\tat org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:124)\n\tat org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:97)\n\tat java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:803)\n\tat java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)\n\tat java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)\n\tat java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:714)\n\tat java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:400)\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\nCaused by: com.mongodb.MongoTimeoutException: Timed out while waiting for a server that matches ReadPreferenceServerSelector{readPreference=primary}. Client view of cluster state is {type=UNKNOWN, servers=[{address=192.168.35.100:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.SocketTimeoutException: Connect timed out}}]\n\tat com.mongodb.internal.connection.BaseCluster.logAndThrowTimeoutException(BaseCluster.java:427)\n\tat com.mongodb.internal.connection.BaseCluster.lambda$selectServer$0(BaseCluster.java:154)\n\tat com.mongodb.internal.time.Timeout.lambda$onExistsAndExpired$16(Timeout.java:236)\n\tat com.mongodb.internal.time.Timeout.lambda$run$10(Timeout.java:201)\n\tat com.mongodb.internal.time.TimePoint.checkedCall(TimePoint.java:98)\n\tat com.mongodb.internal.time.Timeout.call(Timeout.java:174)\n\tat com.mongodb.internal.time.Timeout.run(Timeout.java:194)\n\tat com.mongodb.internal.time.Timeout.onExistsAndExpired(Timeout.java:233)\n\tat com.mongodb.internal.time.Timeout.onExpired(Timeout.java:226)\n\tat com.mongodb.internal.connection.BaseCluster.selectServer(BaseCluster.java:153)\n\tat com.mongodb.internal.connection.SingleServerCluster.selectServer(SingleServerCluster.java:47)\n\tat com.mongodb.internal.binding.ClusterBinding.getReadConnectionSource(ClusterBinding.java:82)\n\tat com.mongodb.client.internal.ClientSessionBinding.getConnectionSource(ClientSessionBinding.java:108)\n\tat com.mongodb.client.internal.ClientSessionBinding.getReadConnectionSource(ClientSessionBinding.java:88)\n\tat com.mongodb.internal.operation.SyncOperationHelper.withSuppliedResource(SyncOperationHelper.java:148)\n\tat com.mongodb.internal.operation.SyncOperationHelper.withSourceAndConnection(SyncOperationHelper.java:129)\n\tat com.mongodb.internal.operation.SyncOperationHelper.lambda$executeRetryableRead$4(SyncOperationHelper.java:195)\n\tat com.mongodb.internal.operation.SyncOperationHelper.lambda$decorateReadWithRetries$13(SyncOperationHelper.java:317)\n\tat com.mongodb.internal.async.function.RetryingSyncSupplier.get(RetryingSyncSupplier.java:67)\n\tat com.mongodb.internal.operation.SyncOperationHelper.executeRetryableRead(SyncOperationHelper.java:201)\n\tat com.mongodb.internal.operation.SyncOperationHelper.executeRetryableRead(SyncOperationHelper.java:180)\n\tat com.mongodb.internal.operation.CommandReadOperation.execute(CommandReadOperation.java:52)\n\tat com.mongodb.client.internal.MongoClusterImpl$OperationExecutorImpl.execute(MongoClusterImpl.java:358)\n\tat com.mongodb.client.internal.MongoDatabaseImpl.executeCommand(MongoDatabaseImpl.java:215)\n\tat com.mongodb.client.internal.MongoDatabaseImpl.runCommand(MongoDatabaseImpl.java:184)\n\tat com.mongodb.client.internal.MongoDatabaseImpl.runCommand(MongoDatabaseImpl.java:179)\n\tat org.springframework.data.mongodb.core.MongoTemplate.lambda$executeCommand$3(MongoTemplate.java:516)\n\tat org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:582)\n\t... 42 common frames omitted\n"}
{"@timestamp":"2025-08-13T16:00:46.287361+09:00","level":"WARN","logger":"org.springframework.boot.actuate.health.HealthEndpointSupport","thread":"RMI TCP Connection(2)-127.0.0.1","message":"Health contributor org.springframework.boot.actuate.data.mongo.MongoHealthIndicator (mongo) took 30021ms to respond","exception":""}
{"@timestamp":"2025-08-13T16:00:46.293466+09:00","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"RMI TCP Connection(2)-127.0.0.1","message":"HikariPool-1 - Starting...","exception":""}
{"@timestamp":"2025-08-13T16:00:46.365602+09:00","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"RMI TCP Connection(2)-127.0.0.1","message":"HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6a124cf9","exception":""}
{"@timestamp":"2025-08-13T16:00:46.369977+09:00","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"RMI TCP Connection(2)-127.0.0.1","message":"HikariPool-1 - Start completed.","exception":""}
{"@timestamp":"2025-08-13T16:02:18.036549+09:00","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread":"SpringApplicationShutdownHook","message":"Commencing graceful shutdown. Waiting for active requests to complete","exception":""}
{"@timestamp":"2025-08-13T16:02:18.040325+09:00","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread":"tomcat-shutdown","message":"Graceful shutdown complete","exception":""}
{"@timestamp":"2025-08-13T16:02:18.068492+09:00","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"SpringApplicationShutdownHook","message":"HikariPool-1 - Shutdown initiated...","exception":""}
{"@timestamp":"2025-08-13T16:02:18.071379+09:00","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"SpringApplicationShutdownHook","message":"HikariPool-1 - Shutdown completed.","exception":""}
{"@timestamp":"2025-08-13T16:02:20.566151+09:00","level":"INFO","logger":"com.dudoji.spring.DudojiApplication","thread":"restartedMain","message":"Starting DudojiApplication using Java 21.0.5 with PID 62025 (/Users/jeong-yunseong/Documents/GitHub/dudoji/dudoji-backend/build/classes/java/main started by jeong-yunseong in /Users/jeong-yunseong/Documents/GitHub/dudoji/dudoji-backend)","exception":""}
{"@timestamp":"2025-08-13T16:02:20.568497+09:00","level":"INFO","logger":"com.dudoji.spring.DudojiApplication","thread":"restartedMain","message":"The following 1 profile is active: \"local\"","exception":""}
{"@timestamp":"2025-08-13T16:02:20.652346+09:00","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"@timestamp":"2025-08-13T16:02:20.652465+09:00","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"@timestamp":"2025-08-13T16:02:21.066103+09:00","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","exception":""}
{"@timestamp":"2025-08-13T16:02:21.128133+09:00","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 59 ms. Found 1 MongoDB repository interface.","exception":""}
{"@timestamp":"2025-08-13T16:02:21.353999+09:00","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 36073 (http)","exception":""}
{"@timestamp":"2025-08-13T16:02:21.358746+09:00","level":"INFO","logger":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","message":"Initializing ProtocolHandler [\"http-nio-36073\"]","exception":""}
{"@timestamp":"2025-08-13T16:02:21.359327+09:00","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"@timestamp":"2025-08-13T16:02:21.359415+09:00","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","exception":""}
{"@timestamp":"2025-08-13T16:02:21.375033+09:00","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"@timestamp":"2025-08-13T16:02:21.375135+09:00","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 723 ms","exception":""}
{"@timestamp":"2025-08-13T16:02:21.75662+09:00","level":"INFO","logger":"org.mongodb.driver.client","thread":"restartedMain","message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"5.2.1\"}, \"os\": {\"type\": \"Darwin\", \"name\": \"Mac OS X\", \"architecture\": \"aarch64\", \"version\": \"15.6\"}, \"platform\": \"Java/Amazon.com Inc./21.0.5+11-LTS\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='dudoji', source='dudoji_log', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@36c34029], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@4147266, com.mongodb.Jep395RecordCodecProvider@4ec20906, com.mongodb.KotlinCodecProvider@440d29de]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[home.yunseong.shop:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@6863eb7e], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}","exception":""}
{"@timestamp":"2025-08-13T16:02:21.81892+09:00","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"@timestamp":"2025-08-13T16:02:21.922208+09:00","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"@timestamp":"2025-08-13T16:02:22.001498+09:00","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name principalDetailService","exception":""}
{"@timestamp":"2025-08-13T16:02:22.308398+09:00","level":"INFO","logger":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","message":"Starting ProtocolHandler [\"http-nio-36073\"]","exception":""}
{"@timestamp":"2025-08-13T16:02:22.314071+09:00","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 36073 (http) with context path '/'","exception":""}
{"@timestamp":"2025-08-13T16:02:22.322113+09:00","level":"INFO","logger":"com.dudoji.spring.DudojiApplication","thread":"restartedMain","message":"Started DudojiApplication in 1.883 seconds (process running for 2.26)","exception":""}
{"@timestamp":"2025-08-13T16:02:22.430245+09:00","level":"INFO","logger":"org.mongodb.driver.cluster","thread":"cluster-ClusterId{value='689c387d2f34097b77001e96', description='null'}-home.yunseong.shop:27017","message":"Monitor thread successfully connected to server with description ServerDescription{address=home.yunseong.shop:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=313393667, minRoundTripTimeNanos=0}","exception":""}
{"@timestamp":"2025-08-13T16:02:22.824212+09:00","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"RMI TCP Connection(2)-127.0.0.1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"@timestamp":"2025-08-13T16:02:22.824404+09:00","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"RMI TCP Connection(2)-127.0.0.1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"@timestamp":"2025-08-13T16:02:22.82541+09:00","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"RMI TCP Connection(2)-127.0.0.1","message":"Completed initialization in 1 ms","exception":""}
{"@timestamp":"2025-08-13T16:02:23.570853+09:00","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"RMI TCP Connection(3)-127.0.0.1","message":"HikariPool-1 - Starting...","exception":""}
{"@timestamp":"2025-08-13T16:02:23.626124+09:00","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"RMI TCP Connection(3)-127.0.0.1","message":"HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@19e8d169","exception":""}
{"@timestamp":"2025-08-13T16:02:23.627385+09:00","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"RMI TCP Connection(3)-127.0.0.1","message":"HikariPool-1 - Start completed.","exception":""}
{"@timestamp":"2025-08-13T16:04:52.772724+09:00","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread":"SpringApplicationShutdownHook","message":"Commencing graceful shutdown. Waiting for active requests to complete","exception":""}
{"@timestamp":"2025-08-13T16:04:52.776565+09:00","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread":"tomcat-shutdown","message":"Graceful shutdown complete","exception":""}
{"@timestamp":"2025-08-13T16:04:53.105624+09:00","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"SpringApplicationShutdownHook","message":"HikariPool-1 - Shutdown initiated...","exception":""}
{"@timestamp":"2025-08-13T16:04:53.108253+09:00","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"SpringApplicationShutdownHook","message":"HikariPool-1 - Shutdown completed.","exception":""}
